{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Logo from \"../assets/logo.png\";\nimport CustomInput from \"../components/CustomInput\";\nimport styles from \"../styles/styles\";\nimport app from \"../firebaseConfig\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from '@firebase/auth';\nimport { useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login() {\n  useEffect(function () {\n    console.log(auth.currentUser);\n    if (!!auth.currentUser) {\n      navigation.navigate('Listagem');\n    }\n  }, [auth.currentUser]);\n  var setEmailInputValue = function setEmailInputValue(value) {\n    setEmail(value);\n  };\n  var setSenhaInputValue = function setSenhaInputValue(value) {\n    setSenha(value);\n  };\n  var criarUsuario = function criarUsuario() {\n    createUserWithEmailAndPassword(auth, email, senha).then(function (dadosDoUsuario) {\n      console.log(dadosDoUsuario);\n    }).catch(function (err) {\n      console.error(err);\n    });\n  };\n  var loginUsuario = function loginUsuario() {\n    signInWithEmailAndPassword(auth, email, senha).then(function (dadosDoUsuario) {\n      console.log(dadosDoUsuario);\n    }).catch(function (err) {\n      console.error(err);\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: Logo,\n      style: {\n        width: 100,\n        height: 100\n      }\n    }), _jsx(CustomInput, {\n      placeholder: \"E-mail\",\n      value: email,\n      funcao: setEmailInputValue\n    }), _jsx(CustomInput, {\n      placeholder: \"Senha\",\n      value: senha,\n      funcao: setSenhaInputValue,\n      isPassword: true\n    }), _jsx(TouchableOpacity, {\n      style: {\n        marginTop: 15\n      },\n      children: _jsx(View, {\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Entrar\"\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["StatusBar","useEffect","useState","Button","StyleSheet","Text","View","TextInput","Image","TouchableOpacity","TouchableWithoutFeedback","Logo","CustomInput","styles","app","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","useNavigation","createNativeStackNavigator","jsx","_jsx","jsxs","_jsxs","Login","console","log","auth","currentUser","navigation","navigate","setEmailInputValue","value","setEmail","setSenhaInputValue","setSenha","criarUsuario","email","senha","then","dadosDoUsuario","catch","err","error","loginUsuario","style","container","children","source","width","height","placeholder","funcao","isPassword","marginTop","button","buttonText"],"sources":["C:/Users/Aluno/desktop/Mobile/react-native-senai/pages/Cadastro.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { useEffect, useState } from 'react';\r\nimport { Button, StyleSheet, Text, View, TextInput, Image, TouchableOpacity, TouchableWithoutFeedback } from 'react-native';\r\nimport Logo from '../assets/logo.png'\r\nimport CustomInput from '../components/CustomInput';\r\nimport styles from '../styles/styles';\r\nimport app from '../firebaseConfig';\r\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from '@firebase/auth';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\nexport default function Login() {\r\n\r\n \r\n  useEffect(() => {\r\n    console.log(auth.currentUser)\r\n    if (!!auth.currentUser) {\r\n      navigation.navigate('Listagem')\r\n    }\r\n    // trocar de tela caso exista um usuario\r\n  }, [auth.currentUser])\r\n\r\n  const setEmailInputValue = (value) => {\r\n    setEmail(value)\r\n  }\r\n\r\n  const setSenhaInputValue = (value) => {\r\n    setSenha(value)\r\n  }\r\n\r\n  const criarUsuario = () => {\r\n    createUserWithEmailAndPassword(auth, email, senha)\r\n    .then((dadosDoUsuario) => {\r\n      console.log(dadosDoUsuario)\r\n    }).catch((err) => {\r\n      console.error(err)\r\n    })\r\n  }\r\n\r\n  const loginUsuario = () => {\r\n    signInWithEmailAndPassword(auth, email, senha)\r\n    .then((dadosDoUsuario) => {\r\n      console.log(dadosDoUsuario)\r\n    }).catch((err) => {\r\n      console.error(err)\r\n    })\r\n  }\r\n \r\n  return (\r\n    <View style={styles.container}>\r\n      <Image\r\n        source={Logo}\r\n        style={{\r\n          width: 100,\r\n          height: 100\r\n        }}\r\n      />\r\n\r\n      <CustomInput\r\n        placeholder='E-mail'\r\n        value={email} \r\n        funcao={setEmailInputValue}\r\n      />\r\n\r\n      <CustomInput\r\n        placeholder='Senha'\r\n        value={senha}\r\n        funcao={setSenhaInputValue}\r\n        isPassword={true}\r\n      />\r\n\r\n      <TouchableOpacity style={{ marginTop: 15 }}>\r\n        <View style={styles.button}>\r\n          <Text style={styles.buttonText}>Entrar</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}