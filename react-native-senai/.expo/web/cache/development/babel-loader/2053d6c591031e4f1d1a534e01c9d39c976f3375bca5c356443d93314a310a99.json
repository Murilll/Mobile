{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Logo from \"./assets/logo.png\";\nimport CustomInput from \"./components/CustomInput\";\nimport styles from \"./styles/styles\";\nimport app from \"./firebaseConfig\";\nimport { getAuth, createUserWithEmailAndPassword } from '@firebase/auth';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var auth = getAuth(app);\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    senha = _useState4[0],\n    setSenha = _useState4[1];\n  var setEmailInputValue = function setEmailInputValue(value) {\n    setEmail(value);\n  };\n  var setSenhaInputValue = function setSenhaInputValue(value) {\n    setSenha(value);\n  };\n  var criarUsuario = function criarUsuario() {\n    createUserWithEmailAndPassword(auth, email, senha).then(function (userCredentials) {\n      console.log(userCredentials);\n    }).catch(function (err) {\n      console.log();\n    });\n  };\n  var singIn = function singIn() {\n    signInWithEmailAndPassword(auth, email, senha).then(function (userCredentials) {\n      console.log(userCredentials);\n    }).catch(function (err) {\n      console.log();\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: Logo,\n      style: {\n        width: 100,\n        height: 100\n      }\n    }), _jsx(CustomInput, {\n      placeholder: \"E-mail\",\n      value: email,\n      funcao: setEmailInputValue\n    }), _jsx(CustomInput, {\n      placeholder: \"Senha\",\n      value: senha,\n      funcao: setSenhaInputValue,\n      isPassword: true\n    }), _jsx(TouchableOpacity, {\n      style: {\n        marginTop: 15\n      },\n      onPress: criarUsuario,\n      children: _jsx(View, {\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Entrar\"\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["StatusBar","useState","Button","StyleSheet","Text","View","TextInput","Image","TouchableOpacity","TouchableWithoutFeedback","Logo","CustomInput","styles","app","getAuth","createUserWithEmailAndPassword","jsx","_jsx","jsxs","_jsxs","App","auth","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","senha","setSenha","setEmailInputValue","value","setSenhaInputValue","criarUsuario","then","userCredentials","console","log","catch","err","singIn","signInWithEmailAndPassword","style","container","children","source","width","height","placeholder","funcao","isPassword","marginTop","onPress","button","buttonText"],"sources":["C:/Users/Aluno/desktop/Mobile/react-native-senai/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { useState } from 'react';\r\nimport { Button, StyleSheet, Text, View, TextInput, Image, TouchableOpacity, TouchableWithoutFeedback } from 'react-native';\r\nimport Logo from './assets/logo.png'\r\nimport CustomInput from './components/CustomInput';\r\nimport styles from './styles/styles';\r\nimport app from './firebaseConfig';\r\nimport { getAuth, createUserWithEmailAndPassword } from '@firebase/auth';\r\n\r\nexport default function App() {\r\n  \r\n  const auth = getAuth(app);\r\n\r\n  const [email, setEmail] = useState()\r\n  const [senha, setSenha] = useState()\r\n \r\n  const setEmailInputValue = (value) => {\r\n    setEmail(value)\r\n  }\r\n\r\n  const setSenhaInputValue = (value) => {\r\n    setSenha(value)\r\n  }\r\n\r\n  const criarUsuario = () => {\r\n    createUserWithEmailAndPassword(auth, email, senha)\r\n    .then((userCredentials) => {\r\n      console.log(userCredentials)\r\n    }).catch((err) => {\r\n      console.log()\r\n    })\r\n  }\r\n\r\n  const singIn = () => {\r\n    signInWithEmailAndPassword(auth, email, senha)\r\n    .then((userCredentials) => {\r\n      console.log(userCredentials)\r\n    }).catch((err) => {\r\n      console.log()\r\n    })\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image\r\n        source={Logo}\r\n        style={{\r\n          width: 100,\r\n          height: 100\r\n        }}\r\n      />\r\n\r\n      <CustomInput\r\n        placeholder='E-mail'\r\n        value={email} \r\n        funcao={setEmailInputValue}\r\n      />\r\n\r\n      <CustomInput\r\n        placeholder='Senha'\r\n        value={senha}\r\n        funcao={setSenhaInputValue}\r\n        isPassword={true}\r\n      />\r\n\r\n      <TouchableOpacity style={{ marginTop: 15 }} onPress={criarUsuario}>\r\n        <View style={styles.button}>\r\n          <Text style={styles.buttonText}>Entrar</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}