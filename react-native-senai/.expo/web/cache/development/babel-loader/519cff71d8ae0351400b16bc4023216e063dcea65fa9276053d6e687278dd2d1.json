{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Logo from \"../assets/logo.png\";\nimport CustomInput from \"../components/CustomInput\";\nimport styles from \"../styles/styles\";\nimport app from \"../firebaseConfig\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from '@firebase/auth';\nimport { useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Cadastro() {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    valor = _useState2[0],\n    setValor = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    referencia = _useState4[0],\n    setReferencia = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    data = _useState6[0],\n    setData = _useState6[1];\n  var navigation = useNavigation();\n  var setValorInputValue = function setValorInputValue(value) {\n    setValor(value);\n  };\n  var setReferenciaInputValue = function setReferenciaInputValue(value) {\n    setReferencia(value);\n  };\n  var setDataInputValue = function setDataInputValue(value) {\n    setData(value);\n  };\n  var CadastrarTranferecia = function CadastrarTranferecia() {};\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: Logo,\n      style: {\n        width: 100,\n        height: 100\n      }\n    }), _jsx(CustomInput, {\n      placeholder: \"Valor\",\n      value: valor,\n      funcao: setValorInputValue\n    }), _jsx(CustomInput, {\n      placeholder: \"Referencia\",\n      value: referencia,\n      funcao: setReferenciaInputValue\n    }), _jsx(CustomInput, {\n      placeholder: \"Data\",\n      value: data,\n      funcao: setDataInputValue\n    }), _jsx(TouchableOpacity, {\n      style: {\n        marginTop: 15\n      },\n      onPress: CadastrarTranferecia,\n      children: _jsx(View, {\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Entrar\"\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["StatusBar","useEffect","useState","Button","StyleSheet","Text","View","TextInput","Image","TouchableOpacity","TouchableWithoutFeedback","Logo","CustomInput","styles","app","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","useNavigation","createNativeStackNavigator","jsx","_jsx","jsxs","_jsxs","Cadastro","_useState","_useState2","_slicedToArray","valor","setValor","_useState3","_useState4","referencia","setReferencia","_useState5","_useState6","data","setData","navigation","setValorInputValue","value","setReferenciaInputValue","setDataInputValue","CadastrarTranferecia","style","container","children","source","width","height","placeholder","funcao","marginTop","onPress","button","buttonText"],"sources":["C:/Users/Aluno/desktop/Mobile/react-native-senai/pages/Cadastro.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { useEffect, useState } from 'react';\r\nimport { Button, StyleSheet, Text, View, TextInput, Image, TouchableOpacity, TouchableWithoutFeedback } from 'react-native';\r\nimport Logo from '../assets/logo.png'\r\nimport CustomInput from '../components/CustomInput';\r\nimport styles from '../styles/styles';\r\nimport app from '../firebaseConfig';\r\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from '@firebase/auth';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\nexport default function Cadastro() {\r\n    const [valor, setValor] = useState()\r\n    const [referencia, setReferencia] = useState()\r\n    const [data, setData] = useState()\r\n\r\n    const navigation = useNavigation()\r\n\r\n    const setValorInputValue = (value) => {\r\n        setValor(value)\r\n    }\r\n\r\n    const setReferenciaInputValue = (value) => {\r\n        setReferencia(value)\r\n        \r\n    }\r\n\r\n    const setDataInputValue = (value) => {\r\n        setData(value)\r\n    }\r\n\r\n    const CadastrarTranferecia = () => {\r\n        \r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Image\r\n                source={Logo}\r\n                style={{\r\n                    width: 100,\r\n                    height: 100\r\n                }}\r\n            />\r\n\r\n            <CustomInput\r\n                placeholder='Valor'\r\n                value={valor}\r\n                funcao={setValorInputValue}\r\n            />\r\n\r\n            <CustomInput\r\n                placeholder='Referencia'\r\n                value={referencia}\r\n                funcao={setReferenciaInputValue}\r\n            />\r\n\r\n            <CustomInput\r\n                placeholder='Data'\r\n                value={data}\r\n                funcao={setDataInputValue}\r\n            />\r\n            <TouchableOpacity style={{ marginTop: 15 }} onPress={CadastrarTranferecia}>\r\n                <View style={styles.button}>\r\n                    <Text style={styles.buttonText}>Entrar</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}